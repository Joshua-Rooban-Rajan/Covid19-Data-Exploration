<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="K:/New beginning for business analyst Job search/SQL project Guided by Alex the analyst/SQLite folder the covid project database/covidsqlproject.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="9965"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,22:maindeath_percentage_world"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="105"/><column index="2" value="108"/><column index="3" value="112"/><column index="4" value="109"/><column index="5" value="120"/><column index="6" value="126"/><column index="7" value="123"/><column index="8" value="235"/><column index="9" value="139"/><column index="10" value="136"/><column index="11" value="248"/><column index="12" value="254"/><column index="13" value="251"/><column index="14" value="300"/><column index="15" value="267"/><column index="16" value="264"/><column index="17" value="300"/><column index="18" value="197"/><column index="19" value="137"/><column index="20" value="265"/><column index="21" value="155"/><column index="22" value="283"/><column index="23" value="251"/><column index="24" value="300"/><column index="25" value="269"/><column index="26" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CovidVaccinations" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="105"/><column index="2" value="101"/><column index="3" value="108"/><column index="4" value="112"/><column index="5" value="109"/><column index="6" value="116"/><column index="7" value="119"/><column index="8" value="273"/><column index="9" value="270"/><column index="10" value="228"/><column index="11" value="300"/><column index="12" value="145"/><column index="13" value="165"/><column index="14" value="148"/><column index="15" value="197"/><column index="16" value="203"/><column index="17" value="261"/><column index="18" value="194"/><column index="19" value="300"/><column index="20" value="300"/><column index="21" value="300"/><column index="22" value="300"/><column index="23" value="300"/><column index="24" value="188"/><column index="25" value="207"/><column index="26" value="137"/><column index="27" value="166"/><column index="28" value="166"/><column index="29" value="173"/><column index="30" value="187"/><column index="31" value="245"/><column index="32" value="223"/><column index="33" value="178"/><column index="34" value="158"/><column index="35" value="246"/><column index="36" value="300"/><column index="37" value="173"/><column index="38" value="296"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Percent_Population_vaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="108"/><column index="2" value="112"/><column index="3" value="109"/><column index="4" value="120"/><column index="5" value="194"/><column index="6" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Population_vs_Location_vs_Vaccinations" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="108"/><column index="2" value="112"/><column index="3" value="109"/><column index="4" value="120"/><column index="5" value="194"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="death_percentage_world" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="126"/><column index="2" value="139"/><column index="3" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="temp" name="vaccinated_percentage_table" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="4" mode="0"/></sort><column_widths><column index="1" value="108"/><column index="2" value="112"/><column index="3" value="109"/><column index="4" value="120"/><column index="5" value="194"/><column index="6" value="200"/><column index="7" value="250"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">select*
from CovidDeaths
where continent is not null


/* finding the deathpercentage*/ 
select 
location, 
date, 
total_cases, 
total_deaths, 
round((cast (total_deaths as FLOAT)/total_cases)*100, 2) as Death_Percentage
from 
CovidDeaths
where 
continent is not null
ORDER BY 
Death_Percentage;


--finding the population vs total_cases and the population affected ratio--
select location, date, total_cases, population,round((cast (total_cases as float) / population)*100, 2) as Population_affected_ratio
from CovidDeaths
where continent is not null
order by Population_affected_ratio Desc;

--finding the population vs total_cases and the population affected ratio--
select location, date, total_cases, population,round((cast (total_cases as float) / population)*100, 2) as Population_affected_ratio
from CovidDeaths
where location like 'Andorra' and continent is not null

order by date;


--population infected ratio by location--
SELECT 
    location, 
    MAX(total_cases) AS highest_infected_count, 
    population, 
    MAX((CAST(total_cases AS FLOAT) / population) * 100) AS Population_infected_ratio
FROM CovidDeaths
where continent is not null
GROUP BY location, population
ORDER BY highest_infected_count DESC;

-- view for population infected ratio--
create view population_infected_ratio_view as 
SELECT 
    location, 
    MAX(total_cases) AS highest_infected_count, 
    population, 
    MAX((CAST(total_cases AS FLOAT) / population) * 100) AS Population_infected_ratio
FROM CovidDeaths
where continent is not null
GROUP BY location, population
ORDER BY highest_infected_count DESC;

--comparison highest death counts in different locations--
select 
location, max(cast(total_deaths as INT)) as total_deaths_per_country
from CovidDeaths
where continent is not NULL
group by location
order by total_deaths_per_country desc

--vuew for max deaths in different locations--
create view max_deaths_diff_locations as 
select 
location, max(cast(total_deaths as INT)) as total_deaths_per_country
from CovidDeaths
where continent is not NULL
group by location
order by total_deaths_per_country desc

--comparison maximumm number of deaths in different continents--
select continent, max(cast (total_deaths as int)) as total_deaths_per_continent
from CovidDeaths
where continent is not null 
group by continent
order by total_deaths_per_continent desc;

--view for maximum deaths in different continents--
create view max_death_diff_continents as 
select continent, max(cast (total_deaths as int)) as total_deaths_per_continent
from CovidDeaths
where continent is not null 
group by continent
order by total_deaths_per_continent desc;


--comapring the total number of deaths per continent--
SELECT 
    continent, 
    SUM(CAST(new_deaths AS int)) AS total_deaths_per_continent
FROM 
    CovidDeaths
WHERE 
    continent IS NOT NULL
GROUP BY 
    continent
ORDER BY 
    total_deaths_per_continent DESC;

--created a view for the total deaths per continent--
create view total_deaths_per_continent as 
SELECT 
    continent, 
    SUM(CAST(new_deaths AS int)) AS total_deaths_per_continent
FROM 
    CovidDeaths
WHERE 
    continent IS NOT NULL
GROUP BY 
    continent
ORDER BY 
    total_deaths_per_continent DESC;

--finding the death percentage of the world--
select 
sum(new_cases) as total_cases, sum(cast (new_deaths as float)) as total_deaths, (sum(cast (new_deaths as float))/ sum(new_cases))*100 as death_percentage_of_world
from CovidDeaths
where continent is not null

--creating a view for the death percentage of the world--
create view death_percentage_world as 
select 
sum(new_cases) as total_cases, sum(cast (new_deaths as float)) as total_deaths, (sum(cast (new_deaths as float))/ sum(new_cases))*100 as death_percentage_of_world
from CovidDeaths
where continent is not null

--finding the cumulative sum of the vaccinations--
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(cast(vac.new_vaccinations as INT)) over (partition by dea.location order by dea.location, dea.date)
from Coviddeaths as dea
join CovidVaccinations as VAC
on dea.location = vac.location and dea.date = vac.date 
where dea.continent is not NULL
order by 2,3

--created a join between covid deaths table and covid vaccinations table--
select*
from CovidDeaths as dea
join CovidVaccinations as vac  
on dea.location= vac. location
and dea.date=vac.date

--total populatoin in a location vs their vaccinations--
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
from CovidDeaths as dea
join CovidVaccinations as vac
on dea.location=vac.location
and dea.date= vac. date
where dea.continent is not null


--creating view for the total populatoin in a location vs their vaccinations--
create view Population_vs_Location_vs_Vaccinations as 
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
from CovidDeaths as dea
join CovidVaccinations as vac
on dea.location=vac.location
and dea.date= vac. date
where dea.continent is not null

--total population and total vaccinations in a location--
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(cast(new_vaccinations as int)) over (partition by dea.location order by dea.location, dea.date) as cumulative_sum_of_vaccinations
from CovidDeaths as dea
JOIN CovidVaccinations as vac
on dea.location=vac.location
and dea.date = vac. date
where dea.continent is not null
order by dea.location and dea.date

--using Common Table Expression (CTE)--
WITH PopVsVac (Continent, location, date, population, new_vaccinations, cumulative_sum_of_vaccinations) 
as 
(
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(cast(new_vaccinations as int)) over (partition by dea.location order by dea.location, dea.date) as cumulative_sum_of_vaccinations
from CovidDeaths as dea
JOIN CovidVaccinations as vac
on dea.location=vac.location
and dea.date = vac. date
where dea.continent is not null
)
select *,(cast(cumulative_sum_of_vaccinations as float)/population)*100 as vaccination_percentage
from PopVsVac

--Creating a Temp Table--
drop table if exists Percent_Population_vaccinated
CREATE TEMPORARY TABLE Percent_Population_vaccinated
(
    continent TEXT, 
    location TEXT,   
    date DATETIME,
    population NUMERIC,
    new_vaccinations NUMERIC,
    cumulative_sum_of_vaccinations NUMERIC
);


INSERT INTO Percent_Population_vaccinated
SELECT 
    dea.continent, 
    dea.location,  
    dea.date, 
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INTEGER)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS cumulative_sum_of_vaccinations
FROM CovidDeaths AS dea
JOIN CovidVaccinations AS vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent IS NOT NULL;

SELECT*, (cast (cumulative_sum_of_vaccinations as float)/population)*100 AS vaccination_percentage
from Percent_Population_vaccinated
order by location, date

--creating a view for storing data for later visualizations--
create view Percent_Population_vaccinated as 
SELECT 
    dea.continent, 
    dea.location,  
    dea.date, 
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INTEGER)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS cumulative_sum_of_vaccinations
FROM CovidDeaths AS dea
JOIN CovidVaccinations AS vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent IS NOT NULL;





</sql><current_tab id="0"/></tab_sql></sqlb_project>
